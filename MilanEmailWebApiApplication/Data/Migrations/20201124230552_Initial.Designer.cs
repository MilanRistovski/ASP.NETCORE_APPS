// <auto-generated />
using Data.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MilanEmailDataBaseContext))]
    [Migration("20201124230552_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain_Models.Models.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category");

                    b.Property<string>("Headline");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(400);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Emails");

                    b.HasData(
                        new { Id = 1, Category = 3, Headline = "Corona Virus Business Update", Text = "Check out our new blog post regarding the newest changes in business due to the global pandemic", UserId = 1 },
                        new { Id = 2, Category = 3, Headline = "New Investment opportunities", Text = "Explore the newest investment opportunities", UserId = 1 },
                        new { Id = 3, Category = 4, Headline = "Doctor appointment", Text = "Don't forget about your upcoming medical appointment ", UserId = 2 },
                        new { Id = 4, Category = 4, Headline = "Chores", Text = "Do the dishes, laundry and buy groceries", UserId = 1 },
                        new { Id = 5, Category = 2, Headline = "Upcoming Meeting", Text = "New Work Meeting related to quarterly results", UserId = 2 },
                        new { Id = 6, Category = 1, Headline = "Learn Angular", Text = "Learn through various books and official documentation", UserId = 1 },
                        new { Id = 7, Category = 1, Headline = "Learn ASP.NET Core Web APi", Text = "Read books, watch tutorials and follow documentation", UserId = 3 }
                    );
                });

            modelBuilder.Entity("Domain_Models.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, FirstName = "Steve", LastName = "Stevenson", Password = "12345", UserName = "steve123" },
                        new { Id = 2, FirstName = "Robert", LastName = "Robertson", Password = "67890", UserName = "R.R" },
                        new { Id = 3, FirstName = "James", LastName = "Jameson", Password = "123456", UserName = "James" }
                    );
                });

            modelBuilder.Entity("Domain_Models.Models.Email", b =>
                {
                    b.HasOne("Domain_Models.Models.User", "User")
                        .WithMany("Emails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
