// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Milan.PizzaApp.DataAccess.DB;

namespace Milan.PizzaApp.DataAccess.Migrations
{
    [DbContext(typeof(PizzaDbContext))]
    partial class PizzaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Milan.PizzaApp.Demo.Models.Discount", b =>
                {
                    b.Property<int>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("PizzaId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Milan.PizzaApp.Demo.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Delivered")
                        .HasColumnType("bit");

                    b.Property<int?>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Milan.PizzaApp.Demo.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "Kapri.png",
                            Name = "Kapri",
                            Price = 7.0,
                            Size = 2
                        },
                        new
                        {
                            Id = 2,
                            Image = "Kapri.png",
                            Name = "Kapri",
                            Price = 7.0,
                            Size = 3
                        },
                        new
                        {
                            Id = 3,
                            Image = "Kapri.png",
                            Name = "Kapri",
                            Price = 7.0,
                            Size = 4
                        },
                        new
                        {
                            Id = 4,
                            Image = "Peperoni.png",
                            Name = "Peperoni",
                            Price = 9.0,
                            Size = 2
                        },
                        new
                        {
                            Id = 5,
                            Image = "Peperoni.png",
                            Name = "Peperoni",
                            Price = 8.0,
                            Size = 3
                        },
                        new
                        {
                            Id = 6,
                            Image = "Peperoni.png",
                            Name = "Peperoni",
                            Price = 8.0,
                            Size = 4
                        },
                        new
                        {
                            Id = 7,
                            Image = "Margarita.png",
                            Name = "Margarita",
                            Price = 10.5,
                            Size = 2
                        },
                        new
                        {
                            Id = 8,
                            Image = "Margarita.png",
                            Name = "Margarita",
                            Price = 10.5,
                            Size = 4
                        },
                        new
                        {
                            Id = 9,
                            Image = "Margarita.png",
                            Name = "Margarita",
                            Price = 10.5,
                            Size = 4
                        },
                        new
                        {
                            Id = 10,
                            Image = "Siciliana.png",
                            Name = "Siciliana",
                            Price = 6.5,
                            Size = 2
                        },
                        new
                        {
                            Id = 11,
                            Image = "Siciliana.png",
                            Name = "Siciliana",
                            Price = 9.5,
                            Size = 3
                        },
                        new
                        {
                            Id = 12,
                            Image = "Siciliana.png",
                            Name = "Siciliana",
                            Price = 9.5,
                            Size = 4
                        });
                });

            modelBuilder.Entity("Milan.PizzaApp.Demo.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Phone")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Bob Street",
                            FirstName = "Bob",
                            LastName = "Bobsky",
                            Phone = 80012312345L
                        });
                });

            modelBuilder.Entity("Milan.PizzaApp.Demo.Models.Order", b =>
                {
                    b.HasOne("Milan.PizzaApp.Demo.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId");

                    b.HasOne("Milan.PizzaApp.Demo.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
